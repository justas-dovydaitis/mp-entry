{"version":3,"sources":["reducers/index.js","store/index.js","components/Grid/Grid.js","configs/axios.js","components/Progress/Progress.js","components/Galery/Image.js","components/Galery/Galery.js","actions/index.js","components/SavedQueries/Queries.js","components/App/App.js","serviceWorker.js","index.js"],"names":["initialState","queries","rootReducer","state","action","type","payload","store","createStore","Grid","props","className","fluid","style","children","Row","Col","w","sm","md","lg","xl","instance","axios","create","baseURL","API_ROOT","timeout","defaults","headers","common","API_ACCESS_KEY","Progress","width","height","h","loaded","Image","src","alt","Galery","React","useState","images","setImages","isFetching","setFetching","reqProgress","setReqProgress","useEffect","url","keyword","get","onDownloadProgress","progressEvent","total","then","res","data","results","catch","err","console","log","position","length","map","image","key","id","xs","urls","small","alt_description","query","connect","dispatch","val","q","i","onClick","search","inputVal","setInputVal","setSearch","mt","placeholder","value","onChange","e","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b694ae6d.chunk.js","sourcesContent":["const initialState = {\n    queries: []\n};\nfunction rootReducer(state = initialState, action) {\n\n    if (action.type === \"ADD_QUERY\") {\n        return {\n            ...state, queries: [...state.queries, action.payload]\n        }\n    }\n    return state;\n};\nexport default rootReducer;","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/index\";\n\nconst store = createStore(rootReducer);\n\nexport default store;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Grid.scss';\n\nconst Grid = (props) => {\n    return <div\n        className={`${props.fluid ? 'container-fluid' : 'container'} ${props.className}`}\n        style={{ ...props.style }}\n    >\n        {props.children}\n    </div>\n}\nGrid.propTypes = {\n    fluid: PropTypes.bool,\n    className: PropTypes.string,\n}\n\nconst Row = (props) => {\n    return <div\n        className={`container__row ${props.className || ''}`}\n        style={{ ...props.style }}\n    >\n        {props.children}\n    </div>\n}\nRow.propTypes = {\n    className: PropTypes.string,\n}\nconst Col = (props) => {\n    return <div\n        className={`\n            ${props.w && `container__col-${props.w}`}\n            ${props.sm && `container__col-sm-${props.sm}`}\n            ${props.md && `container__col-md-${props.md}`}\n            ${props.lg && `container__col-lg-${props.lg}`}\n            ${props.xl && `container__col-xl-${props.xl}`}\n            ${props.className}`}\n        style={{ ...props.style }}>\n        {props.children}\n    </div>\n}\nconst sizeValidator = (props, propName, componentName) => {\n    let value = props[propName];\n    if (value !== undefined) {\n        if (!(typeof value === 'number' && value >= 1 && value <= 12)) {\n            return new Error(\n                'Invalid prop `' + propName + '` supplied to' +\n                ' `' + componentName + '`. Validation failed.'\n            );\n        }\n    }\n    return null;\n};\nCol.propTypes = {\n    className: PropTypes.string,\n    w: sizeValidator,\n    sm: sizeValidator,\n    md: sizeValidator,\n    lg: sizeValidator,\n    xl: sizeValidator,\n}\n\nexport { Grid, Col, Row }\n","import axios from 'axios';\nimport { API_ROOT, API_ACCESS_KEY } from '../settings.json';\n\nconst instance = axios.create({\n    baseURL: API_ROOT,\n    timeout: 1000\n});\n\ninstance.defaults.headers.common['Authorization'] = API_ACCESS_KEY;\n\n\nexport default instance;","import React from 'react';\nimport './Progress.scss';\n\nconst Progress = (props) => {\n    return (\n        <>\n            <div className={`progress-bar ${props.className}`} style={{ width: props.w, height: props.h }}>\n                <div className='progress-bar--filler' style={{ width: `${props.loaded}%` }}></div>\n            </div>\n        </>\n    )\n}\nexport default Progress;","import React from 'react';\n\nconst Image = (props) => {\n    return (\n        <div className='img'>\n            <img src={props.src} alt={props.alt} />\n        </div>\n    )\n}\nexport default Image","import React from 'react';\nimport axios from '../../configs/axios'\n\nimport { Grid, Row, Col } from '../Grid/Grid';\nimport Progress from '../Progress/Progress';\nimport Image from './Image';\n\nimport './Galery.scss'\n\nconst Galery = (props) => {\n    const [images, setImages] = React.useState([]);\n    const [isFetching, setFetching] = React.useState(true);\n    const [reqProgress, setReqProgress] = React.useState(0);\n\n    React.useEffect(() => {\n        let url = props.keyword ? `/search/photos?per_page=1000&query=${props.keyword}` : '/photos?per_page=1000';\n        setReqProgress(0);\n        setFetching(true);\n\n        axios.get(url, {\n            onDownloadProgress: progressEvent => setReqProgress((progressEvent.loaded * 100) / progressEvent.total)\n        })\n            .then(res => {\n                setImages(props.keyword ? res.data.results : res.data);\n                setFetching(false);\n            })\n            .catch(err => {\n                console.log(err);\n                setFetching(false);\n            })\n    }, [props.keyword])\n\n    const MapImages = () => {\n        return images.map(image => {\n            return <Col\n                key={image.id}\n                w={props.xs}\n                sm={props.sm}\n                md={props.md}\n                lg={props.lg}\n            >\n                <Image src={image.urls.small} alt={image.alt_description} />\n            </Col>\n        });\n    }\n    return (\n        <Grid fluid className='vh-75 overflowY-scroll'>\n            <div className='h-100 w-100' style={{ position: \"relative\"}}>\n                {isFetching ?\n                    <Progress w={'90%'} h={'10px'} className='center' loaded={reqProgress} />\n                    :\n                    images.length === 0 ?\n                        <strong className='center'>No images found by entered keyword :(</strong> :\n                        <Row>\n                            <MapImages />\n                        </Row>\n                }\n            </div>\n        </Grid>\n    )\n}\n\nexport default Galery;","export const query = (type, payload) => {\n    console.log('action')\n    return { type: type, payload }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { query } from '../../actions';\n\nimport './Queries.scss';\n\nconst mapStateToProps = state => ({\n    queries: state.queries\n})\nconst mapDispatchToProps = dispatch => ({\n    query: (type, val) => dispatch(query(type, val))\n})\n\nconst Queries = (props) => {\n\n    return (\n        <div className='h-100 w-100' style={{ height: '30px' }} >\n            {\n                props.queries.map((q, i) => {\n                    return <div onClick={() => props.search(q)} key={i} className='bg-pink text-dark w-100 saved-query'>{q}</div>\n                })\n            }\n        </div>\n    )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Queries);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './App.scss';\nimport { Grid, Row, Col } from '../Grid/Grid';\nimport Galery from '../Galery/Galery';\nimport Queries from '../SavedQueries/Queries';\nimport { query } from '../../actions';\n\nconst mapDispatchToProps = dispatch => ({\n  query: (type, val) => dispatch(query(type, val))\n})\n\nconst App = (props) => {\n  const [inputVal, setInputVal] = React.useState('');\n  const [search, setSearch] = React.useState('');\n\n\n\n  return (\n    <Grid fluid className='app mt-3 max-vh-100'>\n      <Row mt>\n        <Col w={12} md={8} lg={10}>\n          <input type='text' placeholder='Search by keywords' className='w-100' value={inputVal} onChange={e => setInputVal(e.target.value)} />\n        </Col>\n        <Col w={6} md={2} lg={1}>\n          <button className='w-100 h-100' onClick={() => setSearch(inputVal)}>Search</button>\n        </Col>\n        <Col w={6} md={2} lg={1}>\n          <button className='w-100 h-100' onClick={() => { props.query('ADD_QUERY', search) }}>Save</button>\n        </Col>\n      </Row>\n      <Row className=\"mt-5\">\n        <Col w={12} md={8} lg={10} className='border'>\n          <Galery xs={12} sm={12} md={6} lg={4} keyword={search} />\n        </Col>\n        <Col w={12} md={4} lg={2} >\n          <Queries search={val => { setSearch(val); setInputVal(val) }} />\n        </Col>\n      </Row>\n    </Grid >\n  );\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}